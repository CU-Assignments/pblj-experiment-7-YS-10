// --- Program 1: Product CRUD with Transaction Handling ---
// File: ProductApp.java

import java.sql.*;
import java.util.Scanner;

public class ProductApp {
    static final String URL = "jdbc:mysql://localhost:3306/your_database";
    static final String USER = "your_username";
    static final String PASS = "your_password";

    public static void main(String[] args) {
        try (Connection conn = DriverManager.getConnection(URL, USER, PASS)) {
            Scanner scanner = new Scanner(System.in);
            while (true) {
                System.out.println("\n1. Create Product\n2. Read Products\n3. Update Product\n4. Delete Product\n5. Exit");
                int choice = scanner.nextInt();
                switch (choice) {
                    case 1 -> createProduct(conn, scanner);
                    case 2 -> readProducts(conn);
                    case 3 -> updateProduct(conn, scanner);
                    case 4 -> deleteProduct(conn, scanner);
                    case 5 -> System.exit(0);
                    default -> System.out.println("Invalid choice.");
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    static void createProduct(Connection conn, Scanner scanner) throws SQLException {
        conn.setAutoCommit(false);
        try (PreparedStatement stmt = conn.prepareStatement("INSERT INTO Product (ProductID, ProductName, Price, Quantity) VALUES (?, ?, ?, ?)");) {
            System.out.print("Enter ProductID: ");
            stmt.setInt(1, scanner.nextInt());
            System.out.print("Enter ProductName: ");
            stmt.setString(2, scanner.next());
            System.out.print("Enter Price: ");
            stmt.setDouble(3, scanner.nextDouble());
            System.out.print("Enter Quantity: ");
            stmt.setInt(4, scanner.nextInt());
            stmt.executeUpdate();
            conn.commit();
            System.out.println("Product added successfully.");
        } catch (SQLException e) {
            conn.rollback();
            throw e;
        }
    }

    static void readProducts(Connection conn) throws SQLException {
        try (Statement stmt = conn.createStatement(); ResultSet rs = stmt.executeQuery("SELECT * FROM Product")) {
            while (rs.next()) {
                System.out.printf("%d %s %.2f %d\n", rs.getInt(1), rs.getString(2), rs.getDouble(3), rs.getInt(4));
            }
        }
    }

    static void updateProduct(Connection conn, Scanner scanner) throws SQLException {
        conn.setAutoCommit(false);
        try (PreparedStatement stmt = conn.prepareStatement("UPDATE Product SET ProductName=?, Price=?, Quantity=? WHERE ProductID=?")) {
            System.out.print("Enter ProductID to update: ");
            int id = scanner.nextInt();
            System.out.print("Enter new ProductName: ");
            stmt.setString(1, scanner.next());
            System.out.print("Enter new Price: ");
            stmt.setDouble(2, scanner.nextDouble());
            System.out.print("Enter new Quantity: ");
            stmt.setInt(3, scanner.nextInt());
            stmt.setInt(4, id);
            stmt.executeUpdate();
            conn.commit();
            System.out.println("Product updated successfully.");
        } catch (SQLException e) {
            conn.rollback();
            throw e;
        }
    }

    static void deleteProduct(Connection conn, Scanner scanner) throws SQLException {
        conn.setAutoCommit(false);
        try (PreparedStatement stmt = conn.prepareStatement("DELETE FROM Product WHERE ProductID=?")) {
            System.out.print("Enter ProductID to delete: ");
            stmt.setInt(1, scanner.nextInt());
            stmt.executeUpdate();
            conn.commit();
            System.out.println("Product deleted successfully.");
        } catch (SQLException e) {
            conn.rollback();
            throw e;
        }
    }
}

// ============================================================

// --- Program 2: Student Management Using JDBC + MVC ---
// File: model/Student.java

package model;

public class Student {
    private int studentId;
    private String name;
    private String department;
    private double marks;

    public Student(int studentId, String name, String department, double marks) {
        this.studentId = studentId;
        this.name = name;
        this.department = department;
        this.marks = marks;
    }

    // Getters and Setters
    public int getStudentId() { return studentId; }
    public String getName() { return name; }
    public String getDepartment() { return department; }
    public double getMarks() { return marks; }
    public void setName(String name) { this.name = name; }
    public void setDepartment(String department) { this.department = department; }
    public void setMarks(double marks) { this.marks = marks; }
}

// File: controller/StudentController.java

package controller;

import model.Student;

import java.sql.*;
import java.util.ArrayList;
import java.util.List;

public class StudentController {
    private Connection conn;

    public StudentController(String url, String user, String pass) throws SQLException {
        conn = DriverManager.getConnection(url, user, pass);
    }

    public void addStudent(Student student) throws SQLException {
        String sql = "INSERT INTO Student (StudentID, Name, Department, Marks) VALUES (?, ?, ?, ?)";
        try (PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setInt(1, student.getStudentId());
            stmt.setString(2, student.getName());
            stmt.setString(3, student.getDepartment());
            stmt.setDouble(4, student.getMarks());
            stmt.executeUpdate();
        }
    }

    public List<Student> getAllStudents() throws SQLException {
        List<Student> students = new ArrayList<>();
        try (Statement stmt = conn.createStatement(); ResultSet rs = stmt.executeQuery("SELECT * FROM Student")) {
            while (rs.next()) {
                students.add(new Student(rs.getInt(1), rs.getString(2), rs.getString(3), rs.getDouble(4)));
            }
        }
        return students;
    }

    public void updateStudent(Student student) throws SQLException {
        String sql = "UPDATE Student SET Name=?, Department=?, Marks=? WHERE StudentID=?";
        try (PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setString(1, student.getName());
            stmt.setString(2, student.getDepartment());
            stmt.setDouble(3, student.getMarks());
            stmt.setInt(4, student.getStudentId());
            stmt.executeUpdate();
        }
    }

    public void deleteStudent(int studentId) throws SQLException {
        String sql = "DELETE FROM Student WHERE StudentID=?";
        try (PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setInt(1, studentId);
            stmt.executeUpdate();
        }
    }
}

// File: view/StudentApp.java

package view;

import controller.StudentController;
import model.Student;

import java.sql.SQLException;
import java.util.List;
import java.util.Scanner;

public class StudentApp {
    public static void main(String[] args) {
        try {
            StudentController controller = new StudentController("jdbc:mysql://localhost:3306/your_database", "your_username", "your_password");
            Scanner scanner = new Scanner(System.in);
            while (true) {
                System.out.println("\n1. Add Student\n2. View Students\n3. Update Student\n4. Delete Student\n5. Exit");
                int choice = scanner.nextInt();
                switch (choice) {
                    case 1 -> {
                        System.out.print("Enter ID: ");
                        int id = scanner.nextInt();
                        System.out.print("Enter Name: ");
                        String name = scanner.next();
                        System.out.print("Enter Department: ");
                        String dept = scanner.next();
                        System.out.print("Enter Marks: ");
                        double marks = scanner.nextDouble();
                        controller.addStudent(new Student(id, name, dept, marks));
                    }
                    case 2 -> {
                        List<Student> list = controller.getAllStudents();
                        list.forEach(s -> System.out.printf("%d %s %s %.2f\n", s.getStudentId(), s.getName(), s.getDepartment(), s.getMarks()));
                    }
                    case 3 -> {
                        System.out.print("Enter ID to update: ");
                        int id = scanner.nextInt();
                        System.out.print("Enter New Name: ");
                        String name = scanner.next();
                        System.out.print("Enter New Department: ");
                        String dept = scanner.next();
                        System.out.print("Enter New Marks: ");
                        double marks = scanner.nextDouble();
                        controller.updateStudent(new Student(id, name, dept, marks));
                    }
                    case 4 -> {
                        System.out.print("Enter ID to delete: ");
                        controller.deleteStudent(scanner.nextInt());
                    }
                    case 5 -> System.exit(0);
                    default -> System.out.println("Invalid choice.");
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}
